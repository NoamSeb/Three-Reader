{"ast":null,"code":"import * as THREE from \"three\";\nimport { gsap } from \"gsap\";\nimport { OrbitControls } from \"three/addons/controls/OrbitControls.js\";\nimport Stats from \"three/examples/jsm/libs/stats.module.js\";\nimport Cube from \"./objects/Cube\";\n// import Sphere from \"./objects/Sphere\";\n\nclass SCENE {\n  constructor() {\n    this.tick = () => {\n      this.stats.begin();\n      this.sphere.tick();\n      // this.cube.tick();\n\n      this.renderer.render(this.scene, this.camera);\n      this.stats.end();\n    };\n  }\n  setup(canvas) {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.canvas = canvas;\n    this.setupScene();\n    this.setupCamera();\n    this.setupOrbit();\n    this.setupStats();\n    this.setupRenderer();\n    this.addObjects();\n    this.addEvents();\n  }\n  setupScene() {\n    this.scene = new THREE.Scene();\n  }\n  setupStats() {\n    this.stats = new Stats();\n    document.body.appendChild(this.stats.dom);\n  }\n  setupCamera() {\n    this.camera = new THREE.PerspectiveCamera(28, this.width / this.height, 0.1, 10000);\n    this.camera.position.z = 5;\n  }\n  setupOrbit() {\n    this.control = new OrbitControls(this.camera, this.canvas);\n  }\n  setupRenderer() {\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.canvas,\n      antialias: false,\n      powerPreference: \"high-performance\",\n      stencil: false,\n      depth: false,\n      alpha: true\n    });\n    this.renderer.toneMapping = THREE.NoToneMapping;\n    this.renderer.outputColorSpace = THREE.SRGBColorSpace;\n    this.renderer.setClearColor(0x000000);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  }\n  addEvents() {\n    gsap.ticker.add(this.tick);\n    window.addEventListener('resize', () => this.resize());\n  }\n  resize() {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.renderer.setSize(this.width, this.height);\n    this.camera.aspect = this.width / this.height;\n    this.camera.updateProjectionMatrix();\n  }\n  addObjects() {\n    this.sphere = new Sphere();\n    this.scene.add(this.sphere.mesh);\n    // this.cube = new Cube();\n\n    // this.scene.add(this.cube.mesh);\n  }\n}\n\nconst Scene = new SCENE();\nexport default Scene;","map":{"version":3,"names":["THREE","gsap","OrbitControls","Stats","Cube","SCENE","constructor","tick","stats","begin","sphere","renderer","render","scene","camera","end","setup","canvas","width","window","innerWidth","height","innerHeight","setupScene","setupCamera","setupOrbit","setupStats","setupRenderer","addObjects","addEvents","Scene","document","body","appendChild","dom","PerspectiveCamera","position","z","control","WebGLRenderer","antialias","powerPreference","stencil","depth","alpha","toneMapping","NoToneMapping","outputColorSpace","SRGBColorSpace","setClearColor","setSize","setPixelRatio","Math","min","devicePixelRatio","ticker","add","addEventListener","resize","aspect","updateProjectionMatrix","Sphere","mesh"],"sources":["/Users/noamsebahoun/Documents/MMI/MMI_3/karl/three-reader-live/src/webgl/Scene.js"],"sourcesContent":["import * as THREE from \"three\";\nimport { gsap } from \"gsap\";\nimport { OrbitControls } from \"three/addons/controls/OrbitControls.js\";\nimport Stats from \"three/examples/jsm/libs/stats.module.js\";\nimport Cube from \"./objects/Cube\";\n// import Sphere from \"./objects/Sphere\";\n\nclass SCENE {\n    setup(canvas) {\n        this.width = window.innerWidth;\n        this.height = window.innerHeight;\n        this.canvas = canvas;\n\n        this.setupScene();\n        this.setupCamera();\n        this.setupOrbit();\n        this.setupStats();\n        this.setupRenderer();\n\n        this.addObjects();\n        this.addEvents();\n    }\n\n    setupScene() {\n        this.scene = new THREE.Scene();\n    }\n\n    setupStats() {\n        this.stats = new Stats();\n        document.body.appendChild(this.stats.dom);\n    }\n\n    setupCamera() {\n        this.camera = new THREE.PerspectiveCamera(\n            28,\n            this.width / this.height,\n            0.1,\n            10000\n        );\n        this.camera.position.z = 5;\n    }\n    setupOrbit() {\n        this.control = new OrbitControls(this.camera, this.canvas)\n    }\n    setupRenderer() {\n        this.renderer = new THREE.WebGLRenderer({\n            canvas: this.canvas,\n            antialias: false,\n            powerPreference: \"high-performance\",\n            stencil: false,\n            depth: false,\n            alpha: true\n        });\n\n        this.renderer.toneMapping = THREE.NoToneMapping;\n        this.renderer.outputColorSpace = THREE.SRGBColorSpace;\n\n        this.renderer.setClearColor(0x000000);\n        this.renderer.setSize(this.width, this.height);\n        this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    }\n    addEvents() {\n        gsap.ticker.add(this.tick);\n        window.addEventListener('resize', () => this.resize());\n    }\n    resize() {\n        this.width = window.innerWidth;\n        this.height = window.innerHeight;\n        this.renderer.setSize(this.width, this.height);\n\n        this.camera.aspect = this.width / this.height;\n        this.camera.updateProjectionMatrix();\n    }\n    addObjects() {\n        this.sphere = new Sphere();\n\n        this.scene.add(this.sphere.mesh);\n        // this.cube = new Cube();\n\n        // this.scene.add(this.cube.mesh);\n    }\n\n    tick = () => {\n        this.stats.begin();\n\n        this.sphere.tick();\n        // this.cube.tick();\n\n        this.renderer.render(this.scene, this.camera);\n\n        this.stats.end();\n    }\n}\n\nconst Scene = new SCENE();\nexport default Scene;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}