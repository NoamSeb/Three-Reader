{"ast":null,"code":"import * as THREE from \"three\";\nimport { gsap } from \"gsap\";\nimport { OrbitControls } from \"three/addons/controls/OrbitControls.js\";\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass\";\nimport { UnrealBloomPass } from \"three/examples/jsm/postprocessing/UnrealBloomPass\";\nimport Stats from \"three/examples/jsm/libs/stats.module.js\";\nimport Cube from \"./objects/Cube\";\nimport Line from \"./objects/Line\";\n// import Sphere from \"./objects/Sphere\";\n\nimport pane from \"../components/utils/Pane\";\nclass SCENE {\n  constructor() {\n    this.tick = (time, deltaTime, frame) => {\n      this.stats.begin();\n\n      // this.cube.tick();\n      // this.sphere.tick();\n      // this.line.tick();\n\n      this.selectedObject.tick(deltaTime);\n\n      // this.renderer.render(this.scene, this.camera);\n\n      this.composer.render();\n      this.stats.end();\n    };\n  }\n  setup(canvas) {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.canvas = canvas;\n    this.setupScene();\n    this.setupCamera();\n    this.setupOrbit();\n    this.setupStats();\n    this.setupRenderer();\n    this.setupPostprecessing();\n    this.addObjects();\n    this.addEvents();\n  }\n  setupScene() {\n    this.scene = new THREE.Scene();\n  }\n  setupStats() {\n    this.stats = new Stats();\n    document.body.appendChild(this.stats.dom);\n  }\n  setupCamera() {\n    this.camera = new THREE.PerspectiveCamera(28, this.width / this.height, 0.1, 10000);\n    this.camera.position.z = 5;\n  }\n  setupOrbit() {\n    this.control = new OrbitControls(this.camera, this.canvas);\n  }\n  setupRenderer() {\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.canvas,\n      antialias: false,\n      powerPreference: \"high-performance\",\n      stencil: false,\n      depth: false,\n      alpha: true\n    });\n    this.renderer.toneMapping = THREE.NoToneMapping;\n    this.renderer.outputColorSpace = THREE.SRGBColorSpace;\n    this.renderer.setClearColor(0x000000);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  }\n  setupPostprecessing() {\n    this.BLOOM_PARAMS = {\n      strenght: 1,\n      radius: 0,\n      threshold: 0\n    };\n    this.composer = new EffectComposer(this.renderer);\n    this.scenePass = new RenderPass(this.scene, this.camera);\n    this.bloomPass = new UnrealBloomPass(new THREE.Vector2(this.width / this.height), this.BLOOM_PARAMS.strenght, this.BLOOM_PARAMS.radius, this.BLOOM_PARAMS.threshold);\n    this.composer.addPass(this.scenePass);\n    this.composer.addPass(this.bloomPass);\n    this.postProcessFolder = pane.addFolder({\n      title: 'postprocess'\n    });\n    this.postProcessFolder.addBinding(this.BLOOM_PARAMS, \"strenght\", {\n      min: 0,\n      max: 10,\n      step: 0.1,\n      label: \"Bloom\"\n    }).on('change', e => {\n      this.bloomPass.strength = e.value;\n    });\n    this.postProcessFolder.addBinding(this.BLOOM_PARAMS, \"radius\", {\n      min: 0,\n      max: 10,\n      step: 0.1,\n      label: \"radius\"\n    }).on('change', e => {\n      this.bloomPass.radius = e.value;\n    });\n    this.postProcessFolder.addBinding(this.BLOOM_PARAMS, \"threshold\", {\n      min: 0,\n      max: 1,\n      step: 0.1,\n      label: \"Seuil\"\n    }).on('change', e => {\n      this.bloomPass.threshold = e.value;\n    });\n  }\n  addEvents() {\n    gsap.ticker.add(this.tick);\n    window.addEventListener('resize', () => this.resize());\n  }\n  resize() {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.renderer.setSize(this.width, this.height);\n    this.camera.aspect = this.width / this.height;\n    this.camera.updateProjectionMatrix();\n  }\n  addObjects() {\n    this.cube = new Cube();\n\n    // this.sphere = new Sphere();\n\n    // this.scene.add(this.sphere);\n    this.line = new Line();\n\n    // this.scene.add(this.line.group);\n\n    this.selectedObject = this.cube;\n    this.scene.add(this.selectedObject.group);\n  }\n  changeVisualizer(index) {\n    this.scene.remove(this.selectedObject.group);\n    switch (index) {\n      case 0:\n        this.selectedObject = this.cube;\n        this.camera.position.z = 5;\n        break;\n      case 1:\n        this.selectedObject = this.line;\n        this.camera.position.z = 600;\n        break;\n      default:\n        break;\n    }\n    this.scene.add(this.selectedObject.group);\n  }\n}\nconst Scene = new SCENE();\nexport default Scene;","map":{"version":3,"names":["THREE","gsap","OrbitControls","EffectComposer","RenderPass","UnrealBloomPass","Stats","Cube","Line","pane","SCENE","constructor","tick","time","deltaTime","frame","stats","begin","selectedObject","composer","render","end","setup","canvas","width","window","innerWidth","height","innerHeight","setupScene","setupCamera","setupOrbit","setupStats","setupRenderer","setupPostprecessing","addObjects","addEvents","scene","Scene","document","body","appendChild","dom","camera","PerspectiveCamera","position","z","control","renderer","WebGLRenderer","antialias","powerPreference","stencil","depth","alpha","toneMapping","NoToneMapping","outputColorSpace","SRGBColorSpace","setClearColor","setSize","setPixelRatio","Math","min","devicePixelRatio","BLOOM_PARAMS","strenght","radius","threshold","scenePass","bloomPass","Vector2","addPass","postProcessFolder","addFolder","title","addBinding","max","step","label","on","e","strength","value","ticker","add","addEventListener","resize","aspect","updateProjectionMatrix","cube","line","group","changeVisualizer","index","remove"],"sources":["/Users/noamsebahoun/Documents/MMI/MMI_3/karl/three-reader-live/src/webgl/Scene.js"],"sourcesContent":["import * as THREE from \"three\";\nimport { gsap } from \"gsap\";\nimport { OrbitControls } from \"three/addons/controls/OrbitControls.js\";\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass\";\nimport { UnrealBloomPass } from \"three/examples/jsm/postprocessing/UnrealBloomPass\";\nimport Stats from \"three/examples/jsm/libs/stats.module.js\";\nimport Cube from \"./objects/Cube\";\nimport Line from \"./objects/Line\";\n// import Sphere from \"./objects/Sphere\";\n\nimport pane from \"../components/utils/Pane\";\n\nclass SCENE {\n    setup(canvas) {\n        this.width = window.innerWidth;\n        this.height = window.innerHeight;\n        this.canvas = canvas;\n\n        this.setupScene();\n        this.setupCamera();\n        this.setupOrbit();\n        this.setupStats();\n        this.setupRenderer();\n        this.setupPostprecessing();\n\n        this.addObjects();\n        this.addEvents();\n    }\n\n    setupScene() {\n        this.scene = new THREE.Scene();\n    }\n\n    setupStats() {\n        this.stats = new Stats();\n        document.body.appendChild(this.stats.dom);\n    }\n\n    setupCamera() {\n        this.camera = new THREE.PerspectiveCamera(\n            28,\n            this.width / this.height,\n            0.1,\n            10000\n        );\n        this.camera.position.z = 5;\n    }\n    setupOrbit() {\n        this.control = new OrbitControls(this.camera, this.canvas)\n    }\n    setupRenderer() {\n        this.renderer = new THREE.WebGLRenderer({\n            canvas: this.canvas,\n            antialias: false,\n            powerPreference: \"high-performance\",\n            stencil: false,\n            depth: false,\n            alpha: true\n        });\n\n        this.renderer.toneMapping = THREE.NoToneMapping;\n        this.renderer.outputColorSpace = THREE.SRGBColorSpace;\n\n        this.renderer.setClearColor(0x000000);\n        this.renderer.setSize(this.width, this.height);\n        this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    }\n    setupPostprecessing() {\n        this.BLOOM_PARAMS = {\n            strenght: 1,\n            radius: 0,\n            threshold: 0\n        }\n\n        this.composer = new EffectComposer(this.renderer)\n        this.scenePass = new RenderPass(this.scene, this.camera)\n        this.bloomPass = new UnrealBloomPass(\n            new THREE.Vector2(this.width / this.height),\n            this.BLOOM_PARAMS.strenght,\n            this.BLOOM_PARAMS.radius,\n            this.BLOOM_PARAMS.threshold\n        )\n\n        this.composer.addPass(this.scenePass);\n        this.composer.addPass(this.bloomPass);\n\n        this.postProcessFolder = pane.addFolder({\n            title: 'postprocess',\n        });\n\n        this.postProcessFolder.addBinding(this.BLOOM_PARAMS, \"strenght\", {\n            min: 0,\n            max: 10,\n            step: 0.1,\n            label: \"Bloom\"\n        }).on('change', (e) => {\n            this.bloomPass.strength = e.value\n        })\n        this.postProcessFolder.addBinding(this.BLOOM_PARAMS, \"radius\", {\n            min: 0,\n            max: 10,\n            step: 0.1,\n            label: \"radius\"\n        }).on('change', (e) => {\n            this.bloomPass.radius = e.value\n        })\n        this.postProcessFolder.addBinding(this.BLOOM_PARAMS, \"threshold\", {\n            min: 0,\n            max: 1,\n            step: 0.1,\n            label: \"Seuil\"\n        }).on('change', (e) => {\n            this.bloomPass.threshold = e.value\n        })\n    }\n    addEvents() {\n        gsap.ticker.add(this.tick);\n        window.addEventListener('resize', () => this.resize());\n    }\n    resize() {\n        this.width = window.innerWidth;\n        this.height = window.innerHeight;\n        this.renderer.setSize(this.width, this.height);\n\n        this.camera.aspect = this.width / this.height;\n        this.camera.updateProjectionMatrix();\n    }\n    addObjects() {\n        this.cube = new Cube();\n\n       \n        // this.sphere = new Sphere();\n\n        // this.scene.add(this.sphere);\n        this.line = new Line();\n\n        // this.scene.add(this.line.group);\n\n        this.selectedObject = this.cube; \n        this.scene.add(this.selectedObject.group);\n    }\n    changeVisualizer(index) {\n        this.scene.remove(this.selectedObject.group)\n        switch (index) {\n            case 0:\n                this.selectedObject = this.cube;\n                this.camera.position.z=5;\n                break;\n            case 1:\n                this.selectedObject = this.line;\n                this.camera.position.z=600;\n                break;\n            default:\n                break;\n        }\n        this.scene.add(this.selectedObject.group);\n    }\n    tick = (time, deltaTime, frame) => {\n        this.stats.begin();\n\n        // this.cube.tick();\n        // this.sphere.tick();\n        // this.line.tick();\n\n        this.selectedObject.tick(deltaTime)\n\n        // this.renderer.render(this.scene, this.camera);\n\n        this.composer.render()\n\n        this.stats.end();\n    }\n}\n\nconst Scene = new SCENE();\nexport default Scene;"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,IAAI,QAAQ,MAAM;AAC3B,SAASC,aAAa,QAAQ,wCAAwC;AACtE,SAASC,cAAc,QAAQ,kDAAkD;AACjF,SAASC,UAAU,QAAQ,8CAA8C;AACzE,SAASC,eAAe,QAAQ,mDAAmD;AACnF,OAAOC,KAAK,MAAM,yCAAyC;AAC3D,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,IAAI,MAAM,gBAAgB;AACjC;;AAEA,OAAOC,IAAI,MAAM,0BAA0B;AAE3C,MAAMC,KAAK,CAAC;EAAAC,YAAA;IAAA,KAiJRC,IAAI,GAAG,CAACC,IAAI,EAAEC,SAAS,EAAEC,KAAK,KAAK;MAC/B,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC,CAAC;;MAElB;MACA;MACA;;MAEA,IAAI,CAACC,cAAc,CAACN,IAAI,CAACE,SAAS,CAAC;;MAEnC;;MAEA,IAAI,CAACK,QAAQ,CAACC,MAAM,CAAC,CAAC;MAEtB,IAAI,CAACJ,KAAK,CAACK,GAAG,CAAC,CAAC;IACpB,CAAC;EAAA;EA9JDC,KAAKA,CAACC,MAAM,EAAE;IACV,IAAI,CAACC,KAAK,GAAGC,MAAM,CAACC,UAAU;IAC9B,IAAI,CAACC,MAAM,GAAGF,MAAM,CAACG,WAAW;IAChC,IAAI,CAACL,MAAM,GAAGA,MAAM;IAEpB,IAAI,CAACM,UAAU,CAAC,CAAC;IACjB,IAAI,CAACC,WAAW,CAAC,CAAC;IAClB,IAAI,CAACC,UAAU,CAAC,CAAC;IACjB,IAAI,CAACC,UAAU,CAAC,CAAC;IACjB,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB,IAAI,CAACC,mBAAmB,CAAC,CAAC;IAE1B,IAAI,CAACC,UAAU,CAAC,CAAC;IACjB,IAAI,CAACC,SAAS,CAAC,CAAC;EACpB;EAEAP,UAAUA,CAAA,EAAG;IACT,IAAI,CAACQ,KAAK,GAAG,IAAIrC,KAAK,CAACsC,KAAK,CAAC,CAAC;EAClC;EAEAN,UAAUA,CAAA,EAAG;IACT,IAAI,CAAChB,KAAK,GAAG,IAAIV,KAAK,CAAC,CAAC;IACxBiC,QAAQ,CAACC,IAAI,CAACC,WAAW,CAAC,IAAI,CAACzB,KAAK,CAAC0B,GAAG,CAAC;EAC7C;EAEAZ,WAAWA,CAAA,EAAG;IACV,IAAI,CAACa,MAAM,GAAG,IAAI3C,KAAK,CAAC4C,iBAAiB,CACrC,EAAE,EACF,IAAI,CAACpB,KAAK,GAAG,IAAI,CAACG,MAAM,EACxB,GAAG,EACH,KACJ,CAAC;IACD,IAAI,CAACgB,MAAM,CAACE,QAAQ,CAACC,CAAC,GAAG,CAAC;EAC9B;EACAf,UAAUA,CAAA,EAAG;IACT,IAAI,CAACgB,OAAO,GAAG,IAAI7C,aAAa,CAAC,IAAI,CAACyC,MAAM,EAAE,IAAI,CAACpB,MAAM,CAAC;EAC9D;EACAU,aAAaA,CAAA,EAAG;IACZ,IAAI,CAACe,QAAQ,GAAG,IAAIhD,KAAK,CAACiD,aAAa,CAAC;MACpC1B,MAAM,EAAE,IAAI,CAACA,MAAM;MACnB2B,SAAS,EAAE,KAAK;MAChBC,eAAe,EAAE,kBAAkB;MACnCC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,KAAK;MACZC,KAAK,EAAE;IACX,CAAC,CAAC;IAEF,IAAI,CAACN,QAAQ,CAACO,WAAW,GAAGvD,KAAK,CAACwD,aAAa;IAC/C,IAAI,CAACR,QAAQ,CAACS,gBAAgB,GAAGzD,KAAK,CAAC0D,cAAc;IAErD,IAAI,CAACV,QAAQ,CAACW,aAAa,CAAC,QAAQ,CAAC;IACrC,IAAI,CAACX,QAAQ,CAACY,OAAO,CAAC,IAAI,CAACpC,KAAK,EAAE,IAAI,CAACG,MAAM,CAAC;IAC9C,IAAI,CAACqB,QAAQ,CAACa,aAAa,CAACC,IAAI,CAACC,GAAG,CAACtC,MAAM,CAACuC,gBAAgB,EAAE,CAAC,CAAC,CAAC;EACrE;EACA9B,mBAAmBA,CAAA,EAAG;IAClB,IAAI,CAAC+B,YAAY,GAAG;MAChBC,QAAQ,EAAE,CAAC;MACXC,MAAM,EAAE,CAAC;MACTC,SAAS,EAAE;IACf,CAAC;IAED,IAAI,CAACjD,QAAQ,GAAG,IAAIhB,cAAc,CAAC,IAAI,CAAC6C,QAAQ,CAAC;IACjD,IAAI,CAACqB,SAAS,GAAG,IAAIjE,UAAU,CAAC,IAAI,CAACiC,KAAK,EAAE,IAAI,CAACM,MAAM,CAAC;IACxD,IAAI,CAAC2B,SAAS,GAAG,IAAIjE,eAAe,CAChC,IAAIL,KAAK,CAACuE,OAAO,CAAC,IAAI,CAAC/C,KAAK,GAAG,IAAI,CAACG,MAAM,CAAC,EAC3C,IAAI,CAACsC,YAAY,CAACC,QAAQ,EAC1B,IAAI,CAACD,YAAY,CAACE,MAAM,EACxB,IAAI,CAACF,YAAY,CAACG,SACtB,CAAC;IAED,IAAI,CAACjD,QAAQ,CAACqD,OAAO,CAAC,IAAI,CAACH,SAAS,CAAC;IACrC,IAAI,CAAClD,QAAQ,CAACqD,OAAO,CAAC,IAAI,CAACF,SAAS,CAAC;IAErC,IAAI,CAACG,iBAAiB,GAAGhE,IAAI,CAACiE,SAAS,CAAC;MACpCC,KAAK,EAAE;IACX,CAAC,CAAC;IAEF,IAAI,CAACF,iBAAiB,CAACG,UAAU,CAAC,IAAI,CAACX,YAAY,EAAE,UAAU,EAAE;MAC7DF,GAAG,EAAE,CAAC;MACNc,GAAG,EAAE,EAAE;MACPC,IAAI,EAAE,GAAG;MACTC,KAAK,EAAE;IACX,CAAC,CAAC,CAACC,EAAE,CAAC,QAAQ,EAAGC,CAAC,IAAK;MACnB,IAAI,CAACX,SAAS,CAACY,QAAQ,GAAGD,CAAC,CAACE,KAAK;IACrC,CAAC,CAAC;IACF,IAAI,CAACV,iBAAiB,CAACG,UAAU,CAAC,IAAI,CAACX,YAAY,EAAE,QAAQ,EAAE;MAC3DF,GAAG,EAAE,CAAC;MACNc,GAAG,EAAE,EAAE;MACPC,IAAI,EAAE,GAAG;MACTC,KAAK,EAAE;IACX,CAAC,CAAC,CAACC,EAAE,CAAC,QAAQ,EAAGC,CAAC,IAAK;MACnB,IAAI,CAACX,SAAS,CAACH,MAAM,GAAGc,CAAC,CAACE,KAAK;IACnC,CAAC,CAAC;IACF,IAAI,CAACV,iBAAiB,CAACG,UAAU,CAAC,IAAI,CAACX,YAAY,EAAE,WAAW,EAAE;MAC9DF,GAAG,EAAE,CAAC;MACNc,GAAG,EAAE,CAAC;MACNC,IAAI,EAAE,GAAG;MACTC,KAAK,EAAE;IACX,CAAC,CAAC,CAACC,EAAE,CAAC,QAAQ,EAAGC,CAAC,IAAK;MACnB,IAAI,CAACX,SAAS,CAACF,SAAS,GAAGa,CAAC,CAACE,KAAK;IACtC,CAAC,CAAC;EACN;EACA/C,SAASA,CAAA,EAAG;IACRnC,IAAI,CAACmF,MAAM,CAACC,GAAG,CAAC,IAAI,CAACzE,IAAI,CAAC;IAC1Ba,MAAM,CAAC6D,gBAAgB,CAAC,QAAQ,EAAE,MAAM,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;EAC1D;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAAC/D,KAAK,GAAGC,MAAM,CAACC,UAAU;IAC9B,IAAI,CAACC,MAAM,GAAGF,MAAM,CAACG,WAAW;IAChC,IAAI,CAACoB,QAAQ,CAACY,OAAO,CAAC,IAAI,CAACpC,KAAK,EAAE,IAAI,CAACG,MAAM,CAAC;IAE9C,IAAI,CAACgB,MAAM,CAAC6C,MAAM,GAAG,IAAI,CAAChE,KAAK,GAAG,IAAI,CAACG,MAAM;IAC7C,IAAI,CAACgB,MAAM,CAAC8C,sBAAsB,CAAC,CAAC;EACxC;EACAtD,UAAUA,CAAA,EAAG;IACT,IAAI,CAACuD,IAAI,GAAG,IAAInF,IAAI,CAAC,CAAC;;IAGtB;;IAEA;IACA,IAAI,CAACoF,IAAI,GAAG,IAAInF,IAAI,CAAC,CAAC;;IAEtB;;IAEA,IAAI,CAACU,cAAc,GAAG,IAAI,CAACwE,IAAI;IAC/B,IAAI,CAACrD,KAAK,CAACgD,GAAG,CAAC,IAAI,CAACnE,cAAc,CAAC0E,KAAK,CAAC;EAC7C;EACAC,gBAAgBA,CAACC,KAAK,EAAE;IACpB,IAAI,CAACzD,KAAK,CAAC0D,MAAM,CAAC,IAAI,CAAC7E,cAAc,CAAC0E,KAAK,CAAC;IAC5C,QAAQE,KAAK;MACT,KAAK,CAAC;QACF,IAAI,CAAC5E,cAAc,GAAG,IAAI,CAACwE,IAAI;QAC/B,IAAI,CAAC/C,MAAM,CAACE,QAAQ,CAACC,CAAC,GAAC,CAAC;QACxB;MACJ,KAAK,CAAC;QACF,IAAI,CAAC5B,cAAc,GAAG,IAAI,CAACyE,IAAI;QAC/B,IAAI,CAAChD,MAAM,CAACE,QAAQ,CAACC,CAAC,GAAC,GAAG;QAC1B;MACJ;QACI;IACR;IACA,IAAI,CAACT,KAAK,CAACgD,GAAG,CAAC,IAAI,CAACnE,cAAc,CAAC0E,KAAK,CAAC;EAC7C;AAgBJ;AAEA,MAAMtD,KAAK,GAAG,IAAI5B,KAAK,CAAC,CAAC;AACzB,eAAe4B,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}