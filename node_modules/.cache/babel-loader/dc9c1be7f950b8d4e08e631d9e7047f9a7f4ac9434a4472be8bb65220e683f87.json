{"ast":null,"code":"import * as THREE from 'three';\nimport AudioController from '../../components/utils/AudioController';\nimport SimplexNoise from 'simplex-noise';\nexport default class Sphere {\n  constructor() {\n    this.geometry = new THREE.SphereGeometry(15, 32, 16);\n    this.material = new THREE.MeshNormalMaterial({\n      color: 0xffff00\n    });\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\n    console.log(this.mesh);\n    this.k = 3; // Facteur de déformation\n    this.noise = new SimplexNoise(); // Utilisation de la bibliothèque Simplex Noise\n  }\n\n  update() {\n    const time = performance.now() * 0.003;\n    for (let i = 0; i < this.geometry.vertices.length; i++) {\n      const p = this.geometry.vertices[i];\n      p.normalize().multiplyScalar(1 + 0.3 * this.deformVertex(p, time));\n    }\n    this.geometry.computeVertexNormals();\n    this.geometry.normalsNeedUpdate = true;\n    this.geometry.verticesNeedUpdate = true;\n  }\n  deformVertex(vertex, time) {\n    const x = vertex.x * this.k + time;\n    const y = vertex.y * this.k;\n    const z = vertex.z * this.k;\n\n    // Utilisation de Simplex Noise pour générer un bruit de Perlin\n    return this.noise.noise3D(x, y, z);\n  }\n  tick() {\n    this.mesh.rotation.x += 0.01;\n    this.update();\n  }\n}","map":{"version":3,"names":["THREE","AudioController","SimplexNoise","Sphere","constructor","geometry","SphereGeometry","material","MeshNormalMaterial","color","mesh","Mesh","console","log","k","noise","update","time","performance","now","i","vertices","length","p","normalize","multiplyScalar","deformVertex","computeVertexNormals","normalsNeedUpdate","verticesNeedUpdate","vertex","x","y","z","noise3D","tick","rotation"],"sources":["/Users/noamsebahoun/Documents/MMI/MMI_3/karl/three-reader-live/src/webgl/objects/Sphere.js"],"sourcesContent":["import * as THREE from 'three';\nimport AudioController from '../../components/utils/AudioController';\nimport SimplexNoise from 'simplex-noise';\n\nexport default class Sphere {\n    constructor() {\n        this.geometry = new THREE.SphereGeometry(15, 32, 16);\n        this.material = new THREE.MeshNormalMaterial({ color: 0xffff00 });\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\n        console.log(this.mesh);\n        this.k = 3; // Facteur de déformation\n        this.noise = new SimplexNoise(); // Utilisation de la bibliothèque Simplex Noise\n    }\n\n    update() {\n        const time = performance.now() * 0.003;\n\n        for (let i = 0; i < this.geometry.vertices.length; i++) {\n            const p = this.geometry.vertices[i];\n            p.normalize().multiplyScalar(1 + 0.3 * this.deformVertex(p, time));\n        }\n\n        this.geometry.computeVertexNormals();\n        this.geometry.normalsNeedUpdate = true;\n        this.geometry.verticesNeedUpdate = true;\n    }\n\n    deformVertex(vertex, time) {\n        const x = vertex.x * this.k + time;\n        const y = vertex.y * this.k;\n        const z = vertex.z * this.k;\n\n        // Utilisation de Simplex Noise pour générer un bruit de Perlin\n        return this.noise.noise3D(x, y, z);\n    }\n\n    tick() {\n        this.mesh.rotation.x += 0.01;\n        this.update();\n    }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,eAAe,MAAM,wCAAwC;AACpE,OAAOC,YAAY,MAAM,eAAe;AAExC,eAAe,MAAMC,MAAM,CAAC;EACxBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,QAAQ,GAAG,IAAIL,KAAK,CAACM,cAAc,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACpD,IAAI,CAACC,QAAQ,GAAG,IAAIP,KAAK,CAACQ,kBAAkB,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CAAC;IACjE,IAAI,CAACC,IAAI,GAAG,IAAIV,KAAK,CAACW,IAAI,CAAC,IAAI,CAACN,QAAQ,EAAE,IAAI,CAACE,QAAQ,CAAC;IACxDK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,IAAI,CAAC;IACtB,IAAI,CAACI,CAAC,GAAG,CAAC,CAAC,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG,IAAIb,YAAY,CAAC,CAAC,CAAC,CAAC;EACrC;;EAEAc,MAAMA,CAAA,EAAG;IACL,MAAMC,IAAI,GAAGC,WAAW,CAACC,GAAG,CAAC,CAAC,GAAG,KAAK;IAEtC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACf,QAAQ,CAACgB,QAAQ,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MACpD,MAAMG,CAAC,GAAG,IAAI,CAAClB,QAAQ,CAACgB,QAAQ,CAACD,CAAC,CAAC;MACnCG,CAAC,CAACC,SAAS,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAACC,YAAY,CAACH,CAAC,EAAEN,IAAI,CAAC,CAAC;IACtE;IAEA,IAAI,CAACZ,QAAQ,CAACsB,oBAAoB,CAAC,CAAC;IACpC,IAAI,CAACtB,QAAQ,CAACuB,iBAAiB,GAAG,IAAI;IACtC,IAAI,CAACvB,QAAQ,CAACwB,kBAAkB,GAAG,IAAI;EAC3C;EAEAH,YAAYA,CAACI,MAAM,EAAEb,IAAI,EAAE;IACvB,MAAMc,CAAC,GAAGD,MAAM,CAACC,CAAC,GAAG,IAAI,CAACjB,CAAC,GAAGG,IAAI;IAClC,MAAMe,CAAC,GAAGF,MAAM,CAACE,CAAC,GAAG,IAAI,CAAClB,CAAC;IAC3B,MAAMmB,CAAC,GAAGH,MAAM,CAACG,CAAC,GAAG,IAAI,CAACnB,CAAC;;IAE3B;IACA,OAAO,IAAI,CAACC,KAAK,CAACmB,OAAO,CAACH,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;EACtC;EAEAE,IAAIA,CAAA,EAAG;IACH,IAAI,CAACzB,IAAI,CAAC0B,QAAQ,CAACL,CAAC,IAAI,IAAI;IAC5B,IAAI,CAACf,MAAM,CAAC,CAAC;EACjB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}