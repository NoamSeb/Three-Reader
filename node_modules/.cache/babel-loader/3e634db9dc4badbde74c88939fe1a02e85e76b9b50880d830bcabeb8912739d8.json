{"ast":null,"code":"import _classCallCheck from\"/Users/noamsebahoun/Documents/MMI/MMI_3/karl/three-reader-live/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/noamsebahoun/Documents/MMI/MMI_3/karl/three-reader-live/node_modules/@babel/runtime/helpers/esm/createClass.js\";import*as THREE from'three';import AudioController from'../../components/utils/AudioController';var Sphere=/*#__PURE__*/function(){function Sphere(){_classCallCheck(this,Sphere);this.geometry=new THREE.BufferGeometry();// Augmentez le nombre de segments et d'anneaux pour plus de particules.\nvar segments=100;var rings=100;var positions=new Float32Array(segments*rings*3);this.originalPositions=new Float32Array(segments*rings*3);for(var i=0;i<segments;i++){for(var j=0;j<rings;j++){var index=(i*rings+j)*3;var phi=i/segments*Math.PI*2;var theta=j/rings*Math.PI;var radius=15;positions[index]=radius*Math.sin(theta)*Math.cos(phi);positions[index+1]=radius*Math.sin(theta)*Math.sin(phi);positions[index+2]=radius*Math.cos(theta);// Stockez les positions d'origine.\nthis.originalPositions[index]=positions[index];this.originalPositions[index+1]=positions[index+1];this.originalPositions[index+2]=positions[index+2];}}this.geometry.setAttribute('position',new THREE.BufferAttribute(positions,3));this.material=new THREE.PointsMaterial({color:0x90e0ef});this.mesh=new THREE.Points(this.geometry,this.material);this.group=new THREE.Group();this.group.add(this.mesh);// Appliquez une rotation de 90 degrés autour de l'axe X.\nthis.group.rotation.x=Math.PI/2;}_createClass(Sphere,[{key:\"tick\",value:function tick(){var remapped=AudioController.fdata[0]/255;// Récupérez la position des particules.\nvar positions=this.geometry.attributes.position.array;if(remapped>0){// Faites bouger les points en fonction de la valeur de remapped.\nfor(var i=0;i<positions.length;i+=3){positions[i]+=(Math.random()-0.5)*remapped*10;positions[i+1]+=(Math.random()-0.5)*remapped*10;positions[i+2]+=(Math.random()-0.5)*remapped*10;}}else{// Réinitialisez les positions des particules aux positions d'origine.\nfor(var _i=0;_i<positions.length;_i+=3){positions[_i]=this.originalPositions[_i];positions[_i+1]=this.originalPositions[_i+1];positions[_i+2]=this.originalPositions[_i+2];}}// Mettez à jour la géométrie des particules.\nthis.geometry.attributes.position.needsUpdate=true;}}]);return Sphere;}();export{Sphere as default};","map":{"version":3,"names":["THREE","AudioController","Sphere","_classCallCheck","geometry","BufferGeometry","segments","rings","positions","Float32Array","originalPositions","i","j","index","phi","Math","PI","theta","radius","sin","cos","setAttribute","BufferAttribute","material","PointsMaterial","color","mesh","Points","group","Group","add","rotation","x","_createClass","key","value","tick","remapped","fdata","attributes","position","array","length","random","needsUpdate","default"],"sources":["/Users/noamsebahoun/Documents/MMI/MMI_3/karl/three-reader-live/src/webgl/objects/Sphere.js"],"sourcesContent":["import * as THREE from 'three';\nimport AudioController from '../../components/utils/AudioController';\n\nexport default class Sphere {\n    constructor() {\n        this.geometry = new THREE.BufferGeometry();\n\n        // Augmentez le nombre de segments et d'anneaux pour plus de particules.\n        const segments = 100;\n        const rings = 100;\n        const positions = new Float32Array(segments * rings * 3);\n        this.originalPositions = new Float32Array(segments * rings * 3);\n\n        for (let i = 0; i < segments; i++) {\n            for (let j = 0; j < rings; j++) {\n                const index = (i * rings + j) * 3;\n                const phi = (i / segments) * Math.PI * 2;\n                const theta = (j / rings) * Math.PI;\n                const radius = 15;\n                positions[index] = radius * Math.sin(theta) * Math.cos(phi);\n                positions[index + 1] = radius * Math.sin(theta) * Math.sin(phi);\n                positions[index + 2] = radius * Math.cos(theta);\n\n                // Stockez les positions d'origine.\n                this.originalPositions[index] = positions[index];\n                this.originalPositions[index + 1] = positions[index + 1];\n                this.originalPositions[index + 2] = positions[index + 2];\n            }\n        }\n\n        this.geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n        this.material = new THREE.PointsMaterial({ color: 0x90e0ef });\n        this.mesh = new THREE.Points(this.geometry, this.material);\n        this.group = new THREE.Group();\n        this.group.add(this.mesh);\n\n        // Appliquez une rotation de 90 degrés autour de l'axe X.\n        this.group.rotation.x = Math.PI / 2;\n    }\n\n    tick() {\n        const remapped = AudioController.fdata[0] / 255;\n\n        // Récupérez la position des particules.\n        const positions = this.geometry.attributes.position.array;\n\n        if (remapped > 0) {\n            // Faites bouger les points en fonction de la valeur de remapped.\n            for (let i = 0; i < positions.length; i += 3) {\n                positions[i] += (Math.random() - 0.5) * remapped * 10;\n                positions[i + 1] += (Math.random() - 0.5) * remapped * 10;\n                positions[i + 2] += (Math.random() - 0.5) * remapped * 10;\n            }\n        } else {\n            // Réinitialisez les positions des particules aux positions d'origine.\n            for (let i = 0; i < positions.length; i += 3) {\n                positions[i] = this.originalPositions[i];\n                positions[i + 1] = this.originalPositions[i + 1];\n                positions[i + 2] = this.originalPositions[i + 2];\n            }\n        }\n\n        // Mettez à jour la géométrie des particules.\n        this.geometry.attributes.position.needsUpdate = true;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}