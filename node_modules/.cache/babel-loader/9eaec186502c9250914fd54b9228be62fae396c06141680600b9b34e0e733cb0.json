{"ast":null,"code":"import * as THREE from \"three\";\nimport { gsap } from \"gsap\";\nclass SCENE {\n  constructor() {\n    this.tick = () => {\n      this.cube.rotation.x += 0.01;\n      this.cube.rotation.y += 0.01;\n      this.renderer.render(this.scene, this.camera);\n    };\n  }\n  setup(canvas) {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.canvas = canvas;\n    this.setupScene();\n    this.setupCamera();\n    this.setupRenderer();\n    this.addObjects();\n    this.addEvents();\n  }\n  setupScene() {\n    this.scene = new THREE.Scene();\n  }\n  setupCamera() {\n    this.camera = new THREE.PerspectiveCamera(28, this.width / this.height, 0.1, 10000);\n  }\n  setupRenderer() {\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.canvas,\n      antialias: true,\n      powerPreference: \"high-performance\",\n      stencil: false,\n      depth: false,\n      alpha: true\n    });\n    this.renderer.toneMapping = THREE.NoToneMapping;\n    this.renderer.outputColorSpace = THREE.SRGBColorSpace;\n    this.renderer.setClearColor(0x000000);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  }\n  addEvents() {\n    gsap.ticker.add(this.tick);\n    window.addEventListener('resize', () => this.resize());\n  }\n  resize() {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.renderer.setSize(this.width, this.height);\n  }\n  addObjects() {\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\n    const material = new THREE.MeshNormalMaterial({});\n    this.cube = new THREE.Mesh(geometry, material);\n    this.scene.add(this.cube);\n    this.camera.position.z = 5;\n  }\n}\nconst Scene = new SCENE();\nexport default Scene;","map":{"version":3,"names":["THREE","gsap","SCENE","constructor","tick","cube","rotation","x","y","renderer","render","scene","camera","setup","canvas","width","window","innerWidth","height","innerHeight","setupScene","setupCamera","setupRenderer","addObjects","addEvents","Scene","PerspectiveCamera","WebGLRenderer","antialias","powerPreference","stencil","depth","alpha","toneMapping","NoToneMapping","outputColorSpace","SRGBColorSpace","setClearColor","setSize","setPixelRatio","Math","min","devicePixelRatio","ticker","add","addEventListener","resize","geometry","BoxGeometry","material","MeshNormalMaterial","Mesh","position","z"],"sources":["/Users/noamsebahoun/Documents/MMI/MMI_3/karl/three-reader-live/src/webgl/Scene.js"],"sourcesContent":["import * as THREE from \"three\";\nimport { gsap } from \"gsap\";\n\nclass SCENE {\n    setup(canvas) {\n        this.width = window.innerWidth;\n        this.height = window.innerHeight;\n        this.canvas = canvas;\n\n        this.setupScene();\n        this.setupCamera();\n        this.setupRenderer();\n\n        this.addObjects();\n        this.addEvents();\n    }\n\n    setupScene() {\n        this.scene = new THREE.Scene();\n    }\n\n    setupCamera() {\n        this.camera = new THREE.PerspectiveCamera(\n            28,\n            this.width / this.height,\n            0.1,\n            10000\n        );\n    }\n\n    setupRenderer() {\n        this.renderer = new THREE.WebGLRenderer({\n            canvas: this.canvas,\n            antialias: true,\n            powerPreference: \"high-performance\",\n            stencil: false,\n            depth: false,\n            alpha: true\n        });\n\n        this.renderer.toneMapping = THREE.NoToneMapping;\n        this.renderer.outputColorSpace = THREE.SRGBColorSpace;\n\n        this.renderer.setClearColor(0x000000);\n        this.renderer.setSize(this.width, this.height);\n        this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    }\n    addEvents() {\n        gsap.ticker.add(this.tick)\n\n        window.addEventListener('resize', () => this.resize())\n    }\n    resize() {\n        this.width = window.innerWidth;\n        this.height = window.innerHeight;\n        this.renderer.setSize(this.width, this.height);\n    }\n    addObjects() {\n        const geometry = new THREE.BoxGeometry(1, 1, 1);\n        const material = new THREE.MeshNormalMaterial({});\n        this.cube = new THREE.Mesh(geometry, material);\n        this.scene.add(this.cube);\n\n        this.camera.position.z = 5;\n\n    }\n\n    tick = () => {\n        this.cube.rotation.x += 0.01;\n        this.cube.rotation.y += 0.01;\n        this.renderer.render(this.scene, this.camera);\n    }\n}\n\nconst Scene = new SCENE();\nexport default Scene;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}