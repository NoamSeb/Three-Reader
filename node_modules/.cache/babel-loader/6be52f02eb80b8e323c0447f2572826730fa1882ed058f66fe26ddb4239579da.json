{"ast":null,"code":"import * as THREE from \"three\";\nimport { gsap } from \"gsap\";\nimport { OrbitControls } from \"three/addons/controls/OrbitControls.js\";\nimport Stats from \"three/examples/jsm/libs/stats.module.js\";\nclass SCENE {\n  constructor() {\n    this.tick = () => {\n      this.stats.begin();\n      this.cube.rotation.x += 0.01;\n      this.cube.rotation.y += 0.01;\n      this.renderer.render(this.scene, this.camera);\n      this.stats.end();\n    };\n  }\n  setup(canvas) {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.canvas = canvas;\n    this.setupScene();\n    this.setupCamera();\n    this.setupOrbit();\n    this.setupStats();\n    this.setupRenderer();\n    this.addObjects();\n    this.addEvents();\n  }\n  setupScene() {\n    this.scene = new THREE.Scene();\n  }\n  setupStats() {\n    this.stats = new Stats();\n    document.body.appendChild(this.stats.dom);\n  }\n  setupCamera() {\n    this.camera = new THREE.PerspectiveCamera(28, this.width / this.height, 0.1, 10000);\n  }\n  setupOrbit() {\n    this.control = new OrbitControls(this.camera, this.canvas);\n  }\n  setupRenderer() {\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.canvas,\n      antialias: false,\n      powerPreference: \"high-performance\",\n      stencil: false,\n      depth: false,\n      alpha: true\n    });\n    this.renderer.toneMapping = THREE.NoToneMapping;\n    this.renderer.outputColorSpace = THREE.SRGBColorSpace;\n    this.renderer.setClearColor(0x000000);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  }\n  addEvents() {\n    gsap.ticker.add(this.tick);\n    gsap.ticker.fps(120);\n    window.addEventListener('resize', () => this.resize());\n  }\n  resize() {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.renderer.setSize(this.width, this.height);\n    this.camera.aspect = this.width / this.height;\n    this.camera.updateProjectionMatrix();\n  }\n  addObjects() {\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\n    const material = new THREE.MeshNormalMaterial({});\n    this.cube = new THREE.Mesh(geometry, material);\n    this.scene.add(this.cube);\n  }\n}\nconst Scene = new SCENE();\nexport default Scene;","map":{"version":3,"names":["THREE","gsap","OrbitControls","Stats","SCENE","constructor","tick","stats","begin","cube","rotation","x","y","renderer","render","scene","camera","end","setup","canvas","width","window","innerWidth","height","innerHeight","setupScene","setupCamera","setupOrbit","setupStats","setupRenderer","addObjects","addEvents","Scene","document","body","appendChild","dom","PerspectiveCamera","control","WebGLRenderer","antialias","powerPreference","stencil","depth","alpha","toneMapping","NoToneMapping","outputColorSpace","SRGBColorSpace","setClearColor","setSize","setPixelRatio","Math","min","devicePixelRatio","ticker","add","fps","addEventListener","resize","aspect","updateProjectionMatrix","geometry","BoxGeometry","material","MeshNormalMaterial","Mesh"],"sources":["/Users/noamsebahoun/Documents/MMI/MMI_3/karl/three-reader-live/src/webgl/Scene.js"],"sourcesContent":["import * as THREE from \"three\";\nimport { gsap } from \"gsap\";\nimport { OrbitControls } from \"three/addons/controls/OrbitControls.js\";\nimport Stats from \"three/examples/jsm/libs/stats.module.js\";\n\nclass SCENE {\n    setup(canvas) {\n        this.width = window.innerWidth;\n        this.height = window.innerHeight;\n        this.canvas = canvas;\n\n        this.setupScene();\n        this.setupCamera();\n        this.setupOrbit();\n        this.setupStats();\n        this.setupRenderer();\n\n        this.addObjects();\n        this.addEvents();\n    }\n\n    setupScene() {\n        this.scene = new THREE.Scene();\n    }\n\n    setupStats() {\n        this.stats = new Stats();\n        document.body.appendChild(this.stats.dom);\n    }\n\n    setupCamera() {\n        this.camera = new THREE.PerspectiveCamera(\n            28,\n            this.width / this.height,\n            0.1,\n            10000\n        );\n    }\n    setupOrbit() {\n        this.control = new OrbitControls(this.camera, this.canvas)\n    }\n    setupRenderer() {\n        this.renderer = new THREE.WebGLRenderer({\n            canvas: this.canvas,\n            antialias: false,\n            powerPreference: \"high-performance\",\n            stencil: false,\n            depth: false,\n            alpha: true\n        });\n\n        this.renderer.toneMapping = THREE.NoToneMapping;\n        this.renderer.outputColorSpace = THREE.SRGBColorSpace;\n\n        this.renderer.setClearColor(0x000000);\n        this.renderer.setSize(this.width, this.height);\n        this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    }\n    addEvents() {\n        gsap.ticker.add(this.tick);\n        gsap.ticker.fps(120);\n        window.addEventListener('resize', () => this.resize());\n    }\n    resize() {\n        this.width = window.innerWidth;\n        this.height = window.innerHeight;\n        this.renderer.setSize(this.width, this.height);\n\n        this.camera.aspect = this.width / this.height;\n        this.camera.updateProjectionMatrix();\n    }\n    addObjects() {\n        const geometry = new THREE.BoxGeometry(1, 1, 1);\n        const material = new THREE.MeshNormalMaterial({});\n        this.cube = new THREE.Mesh(geometry, material);\n        this.scene.add(this.cube);\n\n    }\n\n    tick = () => {\n        this.stats.begin();\n        this.cube.rotation.x += 0.01;\n        this.cube.rotation.y += 0.01;\n        this.renderer.render(this.scene, this.camera);\n        this.stats.end();\n    }\n}\n\nconst Scene = new SCENE();\nexport default Scene;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}